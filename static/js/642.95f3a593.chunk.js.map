{"version":3,"file":"static/js/642.95f3a593.chunk.js","mappings":"0OA+DA,UAzDe,WACb,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,aAOzBC,GAAeC,EAAAA,EAAAA,cACnB,YAAoB,IAAjBV,EAAgB,EAAhBA,UACDM,EAAgB,CAAEN,UAAAA,IAClBG,EAAa,GACd,GACD,CAACG,IAoBH,OAjBAK,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAO,CAAC,IACKK,EADN,mCACT,uGAEUC,EAAAA,EAAAA,IAAA,kHAEyGN,EAFzG,gCAIHO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcZ,GAAa,OAAIY,EAAKC,SAApC,IANZ,sDAQIC,QAAQC,IAAI,KAAMC,SARtB,wDADS,qDAYTP,GACD,CACF,GAAE,CAACL,EAAOJ,KAGT,iBAAKiB,UAAU,YAAf,WACE,kBAAMA,UAAU,OAAOC,SAAUZ,EAAjC,WACE,kBACEW,UAAU,QACVE,KAAK,OACLC,KAAK,YACLC,MAAOxB,EACPyB,SAtCkB,SAAAC,GACxBA,EAAEC,iBACF1B,EAAayB,EAAEE,cAAcJ,MAAMK,cACpC,EAoCOC,aAAa,MACbC,WAAS,EACTC,YAAY,8BAEd,mBAAQV,KAAK,SAASF,UAAU,SAAhC,UACE,iBAAMA,UAAU,eAAhB,yBAGHlB,EAAU+B,OAAS,IAAK,SAAC,IAAD,CAAYlB,KAAMb,MAGhD,C,oDC/CD,IAbmB,SAAC,GAAc,IAAZa,EAAW,EAAXA,KACdmB,GAAWC,EAAAA,EAAAA,MACXC,EAAWrB,EAAKsB,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOf,EAAe,EAAfA,KAAMgB,EAAS,EAATA,GACxC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMR,GAAlC,gBACGI,QADH,IACGA,EAAAA,EAASf,KAFLgB,EAMZ,IACD,OAAO,wBAAKH,GACb,C","sources":["components/pages/Movies/Movies.jsx","components/pages/MoviesList/MoviesList.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport axios from 'axios';\nimport MoviesList from '../MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [filmQuery, setfilmQuery] = useState('');\n  const [dataQuery, setdataQuery] = useState([]);\n  const [searchParams, setsearchParams] = useSearchParams();\n  const query = searchParams.get('filmQuery');\n\n  const handleQueryChange = e => {\n    e.preventDefault();\n    setfilmQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = useCallback(\n    ({ filmQuery }) => {\n      setsearchParams({ filmQuery });\n      setdataQuery([]);\n    },\n    [setsearchParams]\n  );\n\n  useEffect(() => {\n    if (query) {\n      async function fetchVideoByQuery() {\n        try {\n          await axios\n            .get(\n              `https://api.themoviedb.org/3/search/movie?api_key=dbe66e1851c0a98cf79fd3fa903ac46b&language=en-US&query=${query}&page=1&include_adult=false`\n            )\n            .then(({ data }) => setdataQuery([...data.results]));\n        } catch (error) {\n          console.log(error.message);\n        }\n      }\n      fetchVideoByQuery();\n    }\n  }, [query, setdataQuery]);\n\n  return (\n    <div className=\"searchbar\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"filmQuery\"\n          value={filmQuery}\n          onChange={handleQueryChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n        <button type=\"submit\" className=\"button\">\n          <span className=\"button-label\">Search</span>\n        </button>\n      </form>\n      {dataQuery.length > 0 && <MoviesList data={dataQuery} />}\n    </div>\n  );\n};\nexport default Movies;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n  const elements = data.map(({ title, name, id }) => {\n    return (\n      <li key={id}>\n        <Link to={`${id}`} state={{ from: location }}>\n          {title ?? name}\n        </Link>\n      </li>\n    );\n  });\n  return <ul>{elements}</ul>;\n};\nexport default MoviesList;\n"],"names":["useState","filmQuery","setfilmQuery","dataQuery","setdataQuery","useSearchParams","searchParams","setsearchParams","query","get","handleSubmit","useCallback","useEffect","fetchVideoByQuery","axios","then","data","results","console","log","message","className","onSubmit","type","name","value","onChange","e","preventDefault","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","length","location","useLocation","elements","map","title","id","to","state","from"],"sourceRoot":""}