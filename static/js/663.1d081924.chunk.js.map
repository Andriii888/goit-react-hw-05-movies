{"version":3,"file":"static/js/663.1d081924.chunk.js","mappings":"yNAgDA,UA5CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiCR,OAhCAE,EAAAA,EAAAA,YAAU,WACR,KAAIJ,EAAU,IAGE,KAAZA,EAAgB,CAAC,IACJK,EADG,mCAClB,uGAEUC,EAAAA,EAAAA,IAAA,6CAEoCJ,EAFpC,sDAIHK,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPP,GAAW,WACT,OAAOO,EAAKC,QAAQC,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACjC,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGD,EAKZ,GACF,GACF,IAjBP,sDAmBIE,QAAQC,IAAI,KAAMC,SAnBtB,wDADkB,qDAwBlBV,GACD,CACF,GAAE,CAACH,EAASF,KAGX,0BACGA,GACCA,IAAW,sEAGlB,C","sources":["components/pages/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reviews = () => {\n  const [reviews, setreviews] = useState('');\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (reviews > 0) {\n      return;\n    }\n    if (reviews === '') {\n      async function fetchReviews() {\n        try {\n          await axios\n            .get(\n              `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=dbe66e1851c0a98cf79fd3fa903ac46b`\n            )\n            .then(({ data }) => {\n              setreviews(() => {\n                return data.results.map(({ author, content }) => {\n                  return (\n                    <li key={author}>\n                      <h3>{author}</h3>\n                      <p>{content}</p>\n                    </li>\n                  );\n                });\n              });\n            });\n        } catch (error) {\n          console.log(error.message);\n        }\n      }\n\n      fetchReviews();\n    }\n  }, [movieId, reviews]);\n\n  return (\n    <ul>\n      {reviews}\n      {!reviews && <h1>We dont have any reviews for this movie</h1>}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setreviews","movieId","useParams","useEffect","fetchReviews","axios","then","data","results","map","author","content","console","log","message"],"sourceRoot":""}