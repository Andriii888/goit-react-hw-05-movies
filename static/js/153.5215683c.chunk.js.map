{"version":3,"file":"static/js/153.5215683c.chunk.js","mappings":"yQAcA,E,OAZyBA,EAAAA,IAAF,yL,SCkGvB,EA/FqB,WAAO,IAAD,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAiCN,EAAAA,EAAAA,UAAS,IAA1C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOS,EAAP,KAAqBC,EAArB,KACA,GAAgCV,EAAAA,EAAAA,UAAS,IAAzC,eAAOW,EAAP,KAAiBC,EAAjB,KACA,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WAAM,wCAId,uGAEUC,EAAAA,EAAAA,IAAA,6CAEoCpB,EAFpC,8CAIHqB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAELf,EAOEe,EAPFf,KACAF,EAMEiB,EANFjB,MACAkB,EAKED,EALFC,OACAZ,EAIEW,EAJFX,aACAE,EAGES,EAHFT,SACAW,EAEEF,EAFFE,YACArB,EACEmB,EADFnB,aAEFC,EAAgBD,GAChBG,EAASD,GACTG,EAAQD,GACRG,GAAU,WAER,OADkBa,EAAOE,KAAI,SAAAC,GAAI,OAAIA,EAAKnB,IAAT,IAAeoB,UAEjD,IACDf,GAAgB,kBAAMD,CAAN,IAChBG,EAAYD,GACZO,EAAAA,EAAAA,IAAA,6CAC6CI,IAC1CH,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBZ,EAAUY,EAAQC,YAAnC,GACT,IA5BP,sDA8BIC,QAAQC,IAAI,KAAMC,SA9BtB,wDAJc,wBACThC,GADS,mCAqCdiC,EACD,GAAE,CAACjC,IACJ,IAAMkC,GAAWC,EAAAA,EAAAA,MACXC,GAAO,UAAAnB,EAASoB,aAAT,eAAgBD,OAAQ,IAC/BE,GAASC,EAAAA,EAAAA,cAAY,kBAAKL,EAASE,EAAd,GAAqB,CAACA,EAAMF,IAEvD,OACE,gCACE,UAAC,EAAD,CAAmBM,UAAU,qBAA7B,WACE,mBAAQC,KAAK,SAASC,QAASJ,EAA/B,sBACA,gBAAKK,IAAK5B,EAAQ6B,MAAM,QAAQC,OAAO,QAAQC,IAAI,MACnD,iBAAKN,UAAU,YAAf,WACE,iCACGjC,QADH,IACGA,EAAAA,EAAQF,EACRM,MAEH,uCAAeR,MACf,sCACA,uBAAIU,KACJ,oCACA,uBAAIJ,KACJ,4BACE,oDACA,SAAC,KAAD,CACE+B,UAAU,WACVO,GAAG,OACHV,MAAO,CAACD,KAAAA,GAHV,mBAQA,SAAC,KAAD,CACEI,UAAU,WACVO,GAAG,UACHV,MAAO,CAACD,KAAAA,GAHV,+BAWN,SAAC,KAAD,MAGL,C","sources":["components/pages/MovieDetails/MovieDetails.styled.jsx","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nconst MovieDetailsStyle= styled.div`\n\ndisplay:flex;\npadding: 0 30px;\n.infoMovie{\n    padding-left:20px;\n}\n.infoLink{\n    padding:0 20px;\n}\nbutton{width:40px;height:40px;margin-right:10px}\n`\nexport default MovieDetailsStyle;","import { useParams, Link, Outlet, useLocation ,useNavigate} from 'react-router-dom';\nimport { useEffect, useState,useCallback } from 'react';\nimport axios from 'axios';\nimport MovieDetailsStyle from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [vote_average, setvote_average] = useState('');\n  const [title, settitle] = useState('');\n  const [name, setname] = useState('');\n  const [genresMovie, setgenres] = useState('');\n  const [release_date, setrelease_date] = useState('');\n  const [overview, setoverview] = useState('');\n  const [imgURL, setimgUrl] = useState('');\n  const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchMovieById() {\n      try {\n        await axios\n          .get(\n            `https://api.themoviedb.org/3/movie/${movieId}?api_key=dbe66e1851c0a98cf79fd3fa903ac46b`\n          )\n          .then(({ data }) => {\n            const {\n              name,\n              title,\n              genres,\n              release_date,\n              overview,\n              poster_path,\n              vote_average,\n            } = data;\n            setvote_average(vote_average);\n            settitle(title);\n            setname(name);\n            setgenres(() => {\n              const allGenres = genres.map(genr => genr.name).toString();\n              return allGenres;\n            });\n            setrelease_date(() => release_date);\n            setoverview(overview);\n            axios\n              .get(`https://image.tmdb.org/t/p/original${poster_path}`)\n              .then(({ request }) => setimgUrl(request.responseURL));\n          });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n  const navigate = useNavigate();\n  const from = location.state?.from || \"/\"; \n  const goBack = useCallback(()=> navigate(from), [from, navigate]);\n\n  return (\n    <section>\n      <MovieDetailsStyle className=\"infoMovieContainer\">\n        <button type='button' onClick={goBack} >Go back</button>\n        <img src={imgURL} width=\"300px\" height=\"350px\" alt=\"\" />\n        <div className=\"infoMovie\">\n          <h1>\n            {name ?? title}\n            {release_date}\n          </h1>\n          <p>User Score:{vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresMovie}</p>\n          <div>\n            <h3>Additional information</h3>\n            <Link\n              className=\"infoLink\"\n              to=\"cast\"\n              state={{from}}\n              // { from: location.state.from }\n            >\n              Cast\n            </Link>\n            <Link\n              className=\"infoLink\"\n              to=\"reviews\"\n              state={{from}}\n              // { from: location.state.from }\n            >\n              Reviews\n            </Link>\n          </div>\n        </div>\n      </MovieDetailsStyle>\n      <Outlet />\n    </section>\n  );\n};\nexport default MovieDetails;\n"],"names":["styled","movieId","useParams","useState","vote_average","setvote_average","title","settitle","name","setname","genresMovie","setgenres","release_date","setrelease_date","overview","setoverview","imgURL","setimgUrl","location","useLocation","useEffect","axios","then","data","genres","poster_path","map","genr","toString","request","responseURL","console","log","message","fetchMovieById","navigate","useNavigate","from","state","goBack","useCallback","className","type","onClick","src","width","height","alt","to"],"sourceRoot":""}