{"version":3,"file":"static/js/153.2099b683.chunk.js","mappings":"yQAcA,E,OAZyBA,EAAAA,IAAF,yI,SC4FvB,EAzFqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAiCN,EAAAA,EAAAA,UAAS,IAA1C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOS,EAAP,KAAqBC,EAArB,KACA,GAAgCV,EAAAA,EAAAA,UAAS,IAAzC,eAAOW,EAAP,KAAiBC,EAAjB,KACA,GAAsCZ,EAAAA,EAAAA,UAAS,IAA/C,eAAOa,EAAP,KAAoBC,EAApB,KACA,GAAiBd,EAAAA,EAAAA,UAAS,uCAAnBe,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAwC7C,OAtCAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,uGAEUC,EAAAA,EAAAA,IAAA,6CAEoCxB,EAFpC,8CAIHyB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAELnB,EAOEmB,EAPFnB,KACAF,EAMEqB,EANFrB,MACAsB,EAKED,EALFC,OACAhB,EAIEe,EAJFf,aACAE,EAGEa,EAHFb,SACAE,EAEEW,EAFFX,YACAZ,EACEuB,EADFvB,aAEFC,EAAgBD,GAChBG,EAASD,GACTG,EAAQD,GACRG,GAAU,WAER,OADkBiB,EAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKtB,IAAT,IAAeuB,UAEjD,IACDlB,GAAgB,kBAAMD,CAAN,IAChBG,EAAYD,GACZG,EAAeD,EAChB,IA1BP,sDA4BIgB,QAAQC,IAAI,KAAMC,SA5BtB,wDAJc,wBACTjC,GADS,mCAmCdkC,EACD,GAAE,CAAClC,KAGF,gCACE,UAAC,EAAD,CAAmBmC,UAAU,qBAA7B,WACE,SAAC,KAAD,CAAMC,GAAIhB,EAAV,sBACA,gBAAKiB,IAAKpB,EAASF,EAAauB,MAAM,QAAQC,OAAO,QAAQC,IAAI,MACjE,iBAAKL,UAAU,YAAf,WACE,iCACG5B,QADH,IACGA,EAAAA,EAAQF,EACRM,MAEH,uCAAeR,MACf,sCACA,uBAAIU,KACJ,oCACA,uBAAIJ,KACJ,4BACE,oDACA,SAAC,KAAD,CACE0B,UAAU,WACVC,GAAG,OACHf,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAHhC,mBAOA,SAAC,KAAD,CACEa,UAAU,WACVC,GAAG,UACHf,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAHhC,+BAUN,SAAC,KAAD,MAGL,C","sources":["components/pages/MovieDetails/MovieDetails.styled.jsx","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nconst MovieDetailsStyle= styled.div`\n\ndisplay:flex;\npadding: 0 30px;\n.infoMovie{\n    padding-left:20px;\n}\n.infoLink{\n    padding:0 20px;\n}\n\n`\nexport default MovieDetailsStyle;","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MovieDetailsStyle from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [vote_average, setvote_average] = useState('');\n  const [title, settitle] = useState('');\n  const [name, setname] = useState('');\n  const [genresMovie, setgenres] = useState('');\n  const [release_date, setrelease_date] = useState('');\n  const [overview, setoverview] = useState('');\n  const [poster_path, setposter_path] = useState('');\n  const [imgURL] = useState('https://image.tmdb.org/t/p/original');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchMovieById() {\n      try {\n        await axios\n          .get(\n            `https://api.themoviedb.org/3/movie/${movieId}?api_key=dbe66e1851c0a98cf79fd3fa903ac46b`\n          )\n          .then(({ data }) => {\n            const {\n              name,\n              title,\n              genres,\n              release_date,\n              overview,\n              poster_path,\n              vote_average,\n            } = data;\n            setvote_average(vote_average);\n            settitle(title);\n            setname(name);\n            setgenres(() => {\n              const allGenres = genres.map(genr => genr.name).toString();\n              return allGenres;\n            });\n            setrelease_date(() => release_date);\n            setoverview(overview);\n            setposter_path(poster_path);\n          });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <section>\n      <MovieDetailsStyle className=\"infoMovieContainer\">\n        <Link to={backLinkHref}>Go back</Link>\n        <img src={imgURL + poster_path} width=\"300px\" height=\"350px\" alt=\"\" />\n        <div className=\"infoMovie\">\n          <h1>\n            {name ?? title}\n            {release_date}\n          </h1>\n          <p>User Score:{vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresMovie}</p>\n          <div>\n            <h3>Additional information</h3>\n            <Link\n              className=\"infoLink\"\n              to=\"cast\"\n              state={{ from: location.state.from }}\n            >\n              Cast\n            </Link>\n            <Link\n              className=\"infoLink\"\n              to=\"reviews\"\n              state={{ from: location.state.from }}\n            >\n              Reviews\n            </Link>\n          </div>\n        </div>\n      </MovieDetailsStyle>\n      <Outlet />\n    </section>\n  );\n};\nexport default MovieDetails;\n"],"names":["styled","movieId","useParams","useState","vote_average","setvote_average","title","settitle","name","setname","genresMovie","setgenres","release_date","setrelease_date","overview","setoverview","poster_path","setposter_path","imgURL","location","useLocation","backLinkHref","state","from","useEffect","axios","then","data","genres","map","genr","toString","console","log","message","fetchMovieById","className","to","src","width","height","alt"],"sourceRoot":""}